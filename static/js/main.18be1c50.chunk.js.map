{"version":3,"sources":["application/components/layout/DefaultLayout.tsx","application/store/async/AsyncActionReducer.ts","domain/working-time/store/Actions.ts","domain/working-time/store/Reducers.ts","application/types/Time.ts","domain/application-profile/types/Profile.ts","application/store/async/AsyncActionEpic.ts","domain/application-profile/store/Actions.ts","domain/application-profile/store/Epics.ts","domain/application-profile/store/Reducers.ts","application/api/StorageService.ts","domain/working-time/types/PublicHoliday.ts","domain/working-time/api/WorkingTimeApi.ts","domain/working-time/utils/reportGenerator.ts","domain/working-time/types/Errors.tsx","domain/working-time/components/report/Metric.tsx","domain/working-time/utils/reportFormatters.ts","domain/working-time/components/report/constants.ts","domain/working-time/components/report/DayRecord.tsx","domain/working-time/components/report/DaysList.tsx","domain/working-time/components/report/HoursSummary.tsx","domain/working-time/components/report/MonthlyPdfReport.tsx","domain/working-time/store/Epics.ts","application/store/index.ts","application/theme/index.ts","application/theme/colors.ts","application/theme/styles.ts","application/theme/components/select.ts","application/theme/components/button.ts","application/theme/components/checkbox.ts","application/components/common/AlertBox.tsx","application/components/common/UnexpectedErrorMessage.tsx","domain/application-profile/components/NewProfileModal.tsx","application/components/common/FullPageLoader.tsx","application/components/common/Card.tsx","domain/working-time/components/absences/ActiveDateSelect.tsx","domain/working-time/components/absences/custom-absences/AddAbsenceModal.tsx","domain/working-time/types/Absence.ts","domain/working-time/components/absences/custom-absences/CustomAbsenceEntry.tsx","domain/working-time/components/absences/custom-absences/CustomAbsencesPanel.tsx","domain/working-time/components/absences/public-holidays/PublicHolidayEntry.tsx","domain/working-time/components/absences/public-holidays/PublicHolidaysPanel.tsx","domain/working-time/components/absences/AbsencesPage.tsx","application/components/common/TimePicker.tsx","domain/working-time/components/summary/summary-table/NoteInput.tsx","domain/working-time/components/summary/summary-table/CompactSummaryEntry.tsx","domain/working-time/components/summary/summary-table/CompactSummaryTable.tsx","domain/working-time/components/summary/summary-table/FullSizeSummaryEntry.tsx","domain/working-time/components/summary/summary-table/FullSizeSummaryTable.tsx","domain/working-time/components/summary/MonthSummaryPage.tsx","domain/working-time/components/absences/AbsencesContainer.tsx","domain/application-profile/components/ProfilesContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DefaultLayout","children","marginTop","overflow","textAlign","width","href","isExternal","as","AiFillGithub","createReducer","asyncActions","resetAction","baseReducer","reducerWithInitialState","status","case","started","_","params","done","action","data","result","failed","error","undefined","actionCreator","actionCreatorFactory","fetchPublicHolidaysAction","async","setActiveDateAction","addAbsenceAction","removeAbsenceAction","setAbsencesAction","calculateSummaryAction","updateSummaryEntryAction","generatePdfReportAction","resetGeneratePdfReportAction","publicHolidaysReducer","build","activeDateReducer","absencesReducer","state","filter","a","id","summaryReducer","index","findIndex","d","date","getDate","updated","update","generateDocumentReducer","workingTimeReducer","combineReducers","publicHolidays","activeDate","absences","monthSummary","pdfReportResult","TimeSchema","z","object","hour","number","min","max","minute","ProfileSchema","profileName","string","firstName","lastName","position","defaultStartTime","defaultEndTime","refine","time","otherTime","timeEqual","isBefore","message","path","createEpic","requestCreator","actions$","state$","deps","pipe","match","mergeMap","from","payload","value","map","resp","catchError","err","process","NODE_ENV","console","getProfilesAction","addOrUpdateProfileAction","setDefaultProfileAction","getDefaultProfileAction","PROFILES_STORAGE_KEY","getProfiles","api","getObject","record","then","getProfilesEpic","storageService","updateProfileEpic","currentProfiles","saveObject","getDefaultProfileEpic","setDefaultProfileEpic","profileEpics","combineEpics","getProfilesReducer","updateProfilesReducer","getDefaultProfileReducer","setDefaultProfileReducer","profilesReducer","availableProfiles","updateProfileResult","defaultProfile","setDefaultProfileResult","key","element","json","JSON","stringify","Promise","resolve","localStorage","setItem","schema","serialized","getItem","parse","reject","Error","safeParseAsync","success","deleteItem","removeItem","PublicHolidaySchema","Number","isNaN","Date","transform","localName","PublicHolidayErrorSchema","passthrough","PublicHolidayResponseSchema","omit","workingTimeApi","fetchPublicHolidays","year","month","ky","get","searchParams","url","maybeError","safeParse","array","holidays","h","getMonth","uuidv4","entryForDay","day","profile","dayName","format","locale","pl","maybeAbsence","getAbsenceForDay","workingHours","isWeekend","start","end","note","publicHoliday","type","find","isInDateOrRange","customAbsence","dateOrRange","isSameDay","isWithinInterval","InvalidWorkingHoursRange","dayNumbers","join","name","Object","setPrototypeOf","prototype","styles","StyleSheet","create","view","display","flexDirection","borderTop","borderLeft","borderRight","leftPart","flex","rightPart","section","borderBottom","sectionHeader","backgroundColor","paddingBottom","paddingTop","fontWeight","sectionValue","leftSectionHeader","leftSectionValue","rightSectionHeader","rightSectionValue","Metric","style","numberWithZero","n","toString","padStart","formatTime","formatMinutesAsHours","minutes","hours","Math","trunc","mins","paddingVertical","dayValue","workStartValue","workEndValue","hoursValue","noteValue","signatureValue","DayRecord","dayNumber","workStart","workEnd","headerView","header","dayNumberHeader","workStartHeader","workEndHeader","hoursHeader","noteHeader","signatureHeader","DaysList","records","sortBy","r","dayFlex","paddingRight","emptyRight","noteFlex","HoursSummary","workedMinutes","Font","register","family","fonts","src","fontStyle","page","fontFamily","padding","reportView","fontSize","MonthlyPdfReport","input","title","creator","window","location","producer","size","orientation","totalMinutes","publicHolidaysEpic","summaryEpic","summaryFor","daysInMonth","getDaysInMonth","range","generateMonthSummary","timeAsMinutesSinceDayStart","parseRecord","generateDocumentEpic","summary","invalidWorkTimeRecords","length","reduce","prev","current","reportInput","pdf","toBlob","workingTimeEpics","action$","rootReducer","rootEpic","epicDependencies","applicationStore","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","epicMiddleware","createEpicMiddleware","dependencies","store","createStore","applyMiddleware","run","configure","overrides","colors","platinum","periwinkleCrayola","cooperRose","darkLiver","desertSand","global","body","bg","color","components","Select","variants","outline","field","borderColor","Button","Checkbox","baseStyle","control","theme","extendTheme","AlertBox","icon","description","onClose","alertProps","descriptionProps","titleProps","onClick","right","top","UnexpectedErrorMessage","detailsContent","details","ZodError","issues","allowToggle","isFocusable","alignItems","connect","saveProfileResult","dispatch","saveProfile","isOpen","canClose","useForm","resolver","zodResolver","defaultValues","handleSubmit","formState","errors","isValidating","setValue","hourValues","minuteValues","onDateChange","event","newValue","parseInt","target","onSubmit","spacing","isRequired","isInvalid","direction","defaultValue","onChange","e","m","marginRight","form","loadingText","isLoading","colorScheme","FullPageLoader","text","Card","containerProps","shadow","rounded","paddingX","paddingY","stepValues","count","baseValue","multiplier","v","updateActiveDate","months","prevYears","reverse","nextYears","years","concat","marginX","localize","y","label","variant","now","getFullYear","addAbsence","absence","useState","startDate","setStartDate","endDate","setEndDate","setNote","minDate","maxDate","handleClose","selectsRange","inline","disabled","maybeNote","trim","formatDateOrRange","deleteAbsence","wordBreak","customAbsences","addAbsenceModal","useDisclosure","sortAbsenceByDate","getTime","leftIcon","onOpen","publicHolidaysAbsences","holiday","entry","isChecked","some","checked","setAbsences","availablePublicHolidays","useEffect","summaryResult","calculateSummary","maxWidth","baseInputProps","borderWidth","TimePicker","inputProps","defaults","defaultHour","defaultMinute","setHour","setMinute","lastValues","setLastValues","onInputChange","fn","asNumber","replace","onBlur","borderRadius","NoteInput","lastUpdated","setLastUpdated","collectDataResult","updateEntry","newEntry","summaryDay","onTimeChange","newTime","isInvalidTimeRange","includes","border","marginY","background","defaultChecked","t","CompactSummaryTable","minWidth","marginLeft","StandardSummaryTable","generateReportResult","generateReport","resetReportStatus","fullSize","useBreakpointValue","base","md","fileName","blob","FileSaver","saveAs","publicHolidaysResult","monthSummaryResult","setActiveDate","marginBottom","profilesResult","getAvailableProfiles","keys","selectedProfile","values","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18be1c50.chunk.js","sourcesContent":["import Icon from \"@chakra-ui/icon\"\nimport { Box, Link } from \"@chakra-ui/layout\"\nimport React from \"react\"\nimport { AiFillGithub } from \"react-icons/ai\"\n\nconst DefaultLayout: React.FC = ({ children }) => (\n    <Box>\n        <Box marginTop=\"1.5rem\" overflow=\"auto\">\n            {children}\n        </Box>\n        <Box textAlign=\"center\" width=\"100%\" marginTop=\"1.5rem\">\n            <Link href=\"https://github.com/PawelJ-PL/czasogar\" isExternal={true}>\n                <Icon as={AiFillGithub} /> Odwiedź projekt w serwisie Github\n            </Link>\n        </Box>\n    </Box>\n)\n\nexport default DefaultLayout\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */ //https://github.com/aikoven/typescript-fsa/issues/64\nimport { AsyncOperationResult } from \"./AsyncOperationResult\"\nimport { ActionCreator, AsyncActionCreators } from \"typescript-fsa\"\nimport { reducerWithInitialState } from \"typescript-fsa-reducers\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const createReducer = <Params, Result, Error = unknown>(\n    asyncActions: AsyncActionCreators<Params, Result, Error>,\n    resetAction?: ActionCreator<void>\n) => {\n    const baseReducer = reducerWithInitialState<AsyncOperationResult<Params, Result, Error>>({ status: \"NOT_STARTED\" })\n        .case(asyncActions.started, (_, params) => ({\n            status: \"PENDING\",\n            params: params,\n        }))\n        .case(asyncActions.done, (_, action) => ({\n            status: \"FINISHED\",\n            data: action.result!, // https://github.com/aikoven/typescript-fsa/issues/64\n            params: action.params!, // https://github.com/aikoven/typescript-fsa/issues/64\n        }))\n        .case(asyncActions.failed, (_, action) => ({\n            status: \"FAILED\",\n            error: action.error,\n            params: action.params!, // https://github.com/aikoven/typescript-fsa/issues/64\n        }))\n\n    return resetAction === undefined ? baseReducer : baseReducer.case(resetAction, () => ({ status: \"NOT_STARTED\" }))\n}\n","import { Profile } from \"./../../application-profile/types/Profile\"\nimport { Absence } from \"./../types/Absence\"\nimport { PublicHoliday } from \"./../types/PublicHoliday\"\nimport actionCreatorFactory from \"typescript-fsa\"\nimport { SummaryDay } from \"../types/SummaryDay\"\n\nconst actionCreator = actionCreatorFactory(\"WORKING_TIME\")\n\nexport type PublicHolidaysParams = { year: number; month: number }\n\nexport type ActiveDateParams = { year: number; month: number }\n\nexport const fetchPublicHolidaysAction = actionCreator.async<PublicHolidaysParams, PublicHoliday[], Error>(\n    \"FETCH_PUBLIC_HOLIDAYS\"\n)\n\nexport const setActiveDateAction = actionCreator<ActiveDateParams | null>(\"SET_ACTIVE_DATE\")\n\nexport const addAbsenceAction = actionCreator<Absence>(\"ADD_ABSENCE\")\n\nexport const removeAbsenceAction = actionCreator<string>(\"REMOVE_ABSENCE\")\n\nexport const setAbsencesAction = actionCreator<Absence[]>(\"SET_ABSENCES\")\n\nexport const calculateSummaryAction = actionCreator.async<{ profile: Profile }, SummaryDay[], Error>(\n    \"CALCULATE_SUMMARY\"\n)\n\nexport const updateSummaryEntryAction = actionCreator<SummaryDay>(\"UPDATE_SUMMARY_ENTRY\")\n\nexport const generatePdfReportAction = actionCreator.async<\n    { summary: SummaryDay[]; profile: Profile; activeDate: ActiveDateParams },\n    Blob,\n    Error\n>(\"GENERATE_PDF_REPORT\")\n\nexport const resetGeneratePdfReportAction = actionCreator(\"RESET_GENERATE_PDF_REPORT\")\n","import { Absence } from \"./../types/Absence\"\nimport { combineReducers } from \"redux\"\nimport { reducerWithInitialState } from \"typescript-fsa-reducers\"\nimport { createReducer } from \"../../../application/store/async/AsyncActionReducer\"\nimport {\n    ActiveDateParams,\n    addAbsenceAction,\n    calculateSummaryAction,\n    generatePdfReportAction,\n    fetchPublicHolidaysAction,\n    removeAbsenceAction,\n    resetGeneratePdfReportAction,\n    setAbsencesAction,\n    setActiveDateAction,\n    updateSummaryEntryAction,\n} from \"./Actions\"\nimport findIndex from \"ramda/src/findIndex\"\nimport { SummaryDay } from \"../types/SummaryDay\"\nimport { update } from \"ramda\"\n\nconst publicHolidaysReducer = createReducer(fetchPublicHolidaysAction).build()\n\nconst activeDateReducer = reducerWithInitialState<ActiveDateParams | null>(null)\n    .case(setActiveDateAction, (_, action) => action)\n    .build()\n\nconst absencesReducer = reducerWithInitialState<Absence[]>([])\n    .case(addAbsenceAction, (state, action) => [...state, action])\n    .case(removeAbsenceAction, (state, action) => state.filter((a) => a.id !== action))\n    .case(setAbsencesAction, (_, action) => action)\n    .case(setActiveDateAction, () => [])\n    .build()\n\nconst summaryReducer = createReducer(calculateSummaryAction)\n    .case(setActiveDateAction, () => ({ status: \"NOT_STARTED\" }))\n    .case(updateSummaryEntryAction, (state, action) => {\n        if (state.status === \"FINISHED\") {\n            const index = findIndex<SummaryDay>((d) => d.date.getDate() === action.date.getDate())(state.data)\n            if (index < 0) {\n                return state\n            }\n            const updated = update(index, action)(state.data)\n            return { ...state, data: updated }\n        }\n        return state\n    })\n    .build()\n\nconst generateDocumentReducer = createReducer(generatePdfReportAction, resetGeneratePdfReportAction).build()\n\nexport const workingTimeReducer = combineReducers({\n    publicHolidays: publicHolidaysReducer,\n    activeDate: activeDateReducer,\n    absences: absencesReducer,\n    monthSummary: summaryReducer,\n    pdfReportResult: generateDocumentReducer,\n})\n","import { z } from \"zod\"\n\nexport const TimeSchema = z.object({\n    hour: z.number().min(0).max(23),\n    minute: z.number().min(0).max(59),\n})\n\nexport type Time = z.infer<typeof TimeSchema>\n\nexport function timeEqual(time: Time, otherTime: Time): boolean {\n    if (time.hour === otherTime.hour && time.minute === otherTime.minute) {\n        return true\n    } else {\n        return false\n    }\n}\n\nexport function isBefore(time: Time, otherTime: Time): boolean {\n    if (time.hour < otherTime.hour) {\n        return true\n    } else if (time.hour === otherTime.hour && time.minute < otherTime.minute) {\n        return true\n    } else {\n        return false\n    }\n}\n\nexport function isAfter(time: Time, otherTime: Time): boolean {\n    if (timeEqual(time, otherTime)) {\n        return false\n    } else if (isBefore(time, otherTime)) {\n        return false\n    } else {\n        return true\n    }\n}\n","import { z } from \"zod\"\nimport { isAfter, TimeSchema } from \"../../../application/types/Time\"\n\nexport const ProfileSchema = z\n    .object({\n        profileName: z.string(),\n        firstName: z.string(),\n        lastName: z.string(),\n        position: z.string(),\n        defaultStartTime: TimeSchema,\n        defaultEndTime: TimeSchema,\n    })\n    .refine((data) => isAfter(data.defaultEndTime, data.defaultStartTime), {\n        message: \"Czas zakończenia musi być późniejszy niż czas rozpoczęcia\",\n        path: [\"defaultEndTime\"],\n    })\n\nexport type Profile = z.infer<typeof ProfileSchema>\n","import { Deps } from \"./../index\"\nimport { StateObservable } from \"redux-observable\"\nimport { AppState } from \"..\"\nimport { Observable, ObservableInput, from } from \"rxjs\"\nimport { catchError } from \"rxjs/operators\"\nimport { filter } from \"rxjs/operators\"\nimport { map } from \"rxjs/operators\"\nimport { mergeMap } from \"rxjs/operators\"\nimport { AnyAction, AsyncActionCreators } from \"typescript-fsa\"\n\nexport const createEpic = <Params, Result, Error, Dependencies = Deps>(\n    asyncActions: AsyncActionCreators<Params, Result, Error>,\n    requestCreator: (params: Params, dependencies: Dependencies, state: AppState) => ObservableInput<Result>\n) => {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    return (actions$: Observable<AnyAction>, state$: StateObservable<AppState>, deps: Dependencies) =>\n        actions$.pipe(\n            filter(asyncActions.started.match),\n            mergeMap((action) =>\n                from(requestCreator(action.payload, deps, state$.value)).pipe(\n                    map((resp) => asyncActions.done({ result: resp, params: action.payload })),\n                    catchError((err: Error) => {\n                        if (process.env?.NODE_ENV === \"development\") {\n                            console.error(err)\n                        }\n                        return [asyncActions.failed({ params: action.payload, error: err })]\n                    })\n                )\n            )\n        )\n}\n","import { Profile } from \"./../types/Profile\"\nimport actionCreatorFactory from \"typescript-fsa\"\n\nconst actionCreator = actionCreatorFactory(\"PROFILE\")\n\nexport const getProfilesAction = actionCreator.async<void, Record<string, Profile>, Error>(\"GET_PROFILES\")\n\nexport const addOrUpdateProfileAction = actionCreator.async<Profile, void, Error>(\"ADD_OR_UPDATE_PROFILE\")\n\nexport const setDefaultProfileAction = actionCreator.async<string, void, Error>(\"SET_DEFAULT_PROFILE\")\n\nexport const getDefaultProfileAction = actionCreator.async<void, string | null, Error>(\"GET_DEFAULT_PROFILE\")\n","import { AppState, Deps } from \"./../../../application/store/index\"\nimport { Action } from \"redux\"\nimport { combineEpics } from \"redux-observable\"\nimport { ProfileSchema } from \"./../types/Profile\"\nimport { createEpic } from \"./../../../application/store/async/AsyncActionEpic\"\nimport {\n    addOrUpdateProfileAction,\n    getDefaultProfileAction,\n    getProfilesAction,\n    setDefaultProfileAction,\n} from \"./Actions\"\nimport { z } from \"zod\"\nimport storageService from \"../../../application/api/StorageService\"\n\nconst PROFILES_STORAGE_KEY = \"USER_PROFILES\"\n\nconst getProfiles = (api: typeof storageService) =>\n    api.getObject(PROFILES_STORAGE_KEY, z.record(ProfileSchema)).then((result) => result ?? {})\n\nconst getProfilesEpic = createEpic(getProfilesAction, (_, deps) => getProfiles(deps.storageService))\n\nconst updateProfileEpic = createEpic(addOrUpdateProfileAction, async (params, deps) => {\n    const currentProfiles = await getProfiles(deps.storageService)\n    const updated = { ...currentProfiles, [params.profileName]: params }\n    return deps.storageService.saveObject(PROFILES_STORAGE_KEY, updated)\n})\n\nconst getDefaultProfileEpic = createEpic(getDefaultProfileAction, (_, deps) =>\n    deps.storageService.getObject(PROFILES_STORAGE_KEY, z.string())\n)\n\nconst setDefaultProfileEpic = createEpic(setDefaultProfileAction, (params, deps) =>\n    deps.storageService.saveObject(PROFILES_STORAGE_KEY, params)\n)\n\nexport const profileEpics = combineEpics<Action, Action, AppState, Deps>(\n    getProfilesEpic,\n    updateProfileEpic,\n    getDefaultProfileEpic,\n    setDefaultProfileEpic\n)\n","import { combineReducers } from \"redux\"\nimport { createReducer } from \"../../../application/store/async/AsyncActionReducer\"\nimport {\n    addOrUpdateProfileAction,\n    getDefaultProfileAction,\n    getProfilesAction,\n    setDefaultProfileAction,\n} from \"./Actions\"\n\nconst getProfilesReducer = createReducer(getProfilesAction)\n    .case(addOrUpdateProfileAction.done, (state, action) => {\n        if (state.status === \"FINISHED\") {\n            const updated = { ...state.data, [action.params.profileName]: action.params }\n            return { ...state, data: updated }\n        } else {\n            return state\n        }\n    })\n    .build()\n\nconst updateProfilesReducer = createReducer(addOrUpdateProfileAction).build()\n\nconst getDefaultProfileReducer = createReducer(getDefaultProfileAction).build()\n\nconst setDefaultProfileReducer = createReducer(setDefaultProfileAction).build()\n\nexport const profilesReducer = combineReducers({\n    availableProfiles: getProfilesReducer,\n    updateProfileResult: updateProfilesReducer,\n    defaultProfile: getDefaultProfileReducer,\n    setDefaultProfileResult: setDefaultProfileReducer,\n})\n","import { ZodSchema } from \"zod\"\n\nconst storageService = {\n    saveObject: <T extends unknown>(key: string, element: T): Promise<void> => {\n        const json = JSON.stringify(element)\n        return Promise.resolve(localStorage.setItem(key, json))\n    },\n    getObject: async <T>(key: string, schema: ZodSchema<T>): Promise<T | null> => {\n        const serialized = localStorage.getItem(key)\n        if (!serialized) {\n            return Promise.resolve(null)\n        }\n        let object\n\n        try {\n            object = JSON.parse(serialized)\n        } catch (e) {\n            return Promise.reject(new Error(`Value ${serialized} is not valid JSON`))\n        }\n        const result = await schema.safeParseAsync(object)\n\n        if (result.success) {\n            return result.data\n        } else {\n            return Promise.reject(result.error)\n        }\n    },\n    deleteItem(key: string): Promise<void> {\n        return Promise.resolve(localStorage.removeItem(key))\n    },\n}\n\nexport default storageService\n","import { z } from \"zod\"\n\nexport const PublicHolidaySchema = z.object({\n    id: z.string(),\n    date: z\n        .string()\n        .refine((data) => !Number.isNaN(Date.parse(data)), { message: \"Invalid date\" })\n        .transform((data) => new Date(data)),\n    localName: z.string(),\n})\n\nexport type PublicHoliday = z.infer<typeof PublicHolidaySchema>\n","import ky from \"ky\"\nimport { PublicHoliday, PublicHolidaySchema } from \"./../types/PublicHoliday\"\nimport { z } from \"zod\"\nimport { v4 as uuidv4 } from \"uuid\"\n\nconst PublicHolidayErrorSchema = z.object({\n    status: z.object({\n        error: z.object({}).passthrough(),\n    }),\n})\n\nconst PublicHolidayResponseSchema = PublicHolidaySchema.omit({ id: true })\n\nconst workingTimeApi = {\n    fetchPublicHolidays(year: number, month: number): Promise<PublicHoliday[]> {\n        return ky\n            .get(\"https://api.allorigins.win/raw\", {\n                searchParams: { url: `https://date.nager.at/api/v3/publicholidays/${year}/PL` },\n            })\n            .json()\n            .then((data) => {\n                const maybeError = PublicHolidayErrorSchema.safeParse(data)\n                if (maybeError.success) {\n                    return Promise.reject(\n                        new Error(`Request failed with ${JSON.stringify(maybeError.data.status.error)}`)\n                    )\n                } else {\n                    return data\n                }\n            })\n            .then((data) => PublicHolidayResponseSchema.array().parse(data))\n            .then((holidays) => holidays.filter((h) => h.date.getMonth() + 1 === month))\n            .then((holidays) => holidays.map((h) => ({ ...h, id: uuidv4() })))\n    },\n}\n\nexport default workingTimeApi\n","import { SummaryDay } from \"./../types/SummaryDay\"\nimport { Profile } from \"./../../application-profile/types/Profile\"\nimport { Absence, DateOrRange } from \"./../types/Absence\"\nimport { ActiveDateParams } from \"../store/Actions\"\nimport getDaysInMonth from \"date-fns/getDaysInMonth\"\nimport format from \"date-fns/format\"\nimport pl from \"date-fns/locale/pl\"\nimport range from \"ramda/src/range\"\nimport isWeekend from \"date-fns/isWeekend\"\nimport isSameDay from \"date-fns/isSameDay\"\nimport isWithinInterval from \"date-fns/isWithinInterval\"\n\nexport function generateMonthSummary(\n    summaryFor: ActiveDateParams,\n    absences: Absence[],\n    profile: Profile\n): SummaryDay[] {\n    const daysInMonth = getDaysInMonth(new Date(summaryFor.year, summaryFor.month - 1))\n    const daysAsDates = range(1, daysInMonth + 1).map((d) => new Date(summaryFor.year, summaryFor.month - 1, d))\n    return daysAsDates.map((d) => entryForDay(d, absences, profile))\n}\n\nconst entryForDay = (day: Date, absences: Absence[], profile: Profile) => {\n    const dayName = format(day, \"EEEEEE\", { locale: pl })\n    const maybeAbsence = getAbsenceForDay(day, absences)\n    const workingDay = !maybeAbsence && !isWeekend(day)\n    const workingHours = workingDay\n        ? {\n              start: { hour: profile.defaultStartTime.hour, minute: profile.defaultStartTime.minute },\n              end: { hour: profile.defaultEndTime.hour, minute: profile.defaultEndTime.minute },\n          }\n        : null\n\n    return {\n        date: day,\n        dayName,\n        note: maybeAbsence?.note,\n        workingHours: workingHours,\n    }\n}\n\nconst getAbsenceForDay = (day: Date, absences: Absence[]) => {\n    const publicHoliday = absences.filter((a) => a.type === \"PublicHoliday\").find((a) => isInDateOrRange(day, a.date))\n    if (publicHoliday) {\n        return publicHoliday\n    }\n    if (isWeekend(day)) {\n        return null\n    }\n    const customAbsence = absences.filter((a) => a.type === \"Custom\").find((a) => isInDateOrRange(day, a.date))\n    return customAbsence ?? null\n}\n\nconst isInDateOrRange = (day: Date, dateOrRange: DateOrRange) => {\n    if (dateOrRange instanceof Date) {\n        return isSameDay(day, dateOrRange)\n    } else {\n        return isWithinInterval(day, { start: dateOrRange[0], end: dateOrRange[1] })\n    }\n}\n","export class InvalidWorkingHoursRange extends Error {\n    readonly dayNumbers: number[]\n\n    constructor(dayNumbers: number[]) {\n        super(`Time range for days ${dayNumbers.join(\", \")} is invalid`)\n        this.name = new.target.name\n        Object.setPrototypeOf(this, new.target.prototype)\n        this.dayNumbers = dayNumbers\n    }\n}\n","import { StyleSheet, Text, View } from \"@react-pdf/renderer\"\nimport React from \"react\"\nimport { WorkingTimeStatement } from \"../../types/WorkingTimeStatement\"\n\ntype Props = {\n    data: WorkingTimeStatement\n}\n\nconst styles = StyleSheet.create({\n    view: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        borderTop: \"2\",\n        borderLeft: \"2\",\n        borderRight: \"2\",\n    },\n    leftPart: {\n        flex: \"5\",\n        borderRight: \"2\",\n    },\n    rightPart: {\n        flex: 14,\n    },\n    section: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        borderBottom: \"2\",\n    },\n    sectionHeader: {\n        backgroundColor: \"#a0a0a0\",\n        borderRight: \"2\",\n        textAlign: \"center\",\n        paddingBottom: \"3\",\n        paddingTop: \"3\",\n        fontWeight: \"semibold\",\n    },\n    sectionValue: {\n        textAlign: \"center\",\n        paddingBottom: \"3\",\n        paddingTop: \"3\",\n    },\n    leftSectionHeader: {\n        flex: 2,\n    },\n    leftSectionValue: {\n        flex: 3,\n    },\n    rightSectionHeader: {\n        flex: 5,\n    },\n    rightSectionValue: {\n        flex: 9,\n    },\n})\n\nconst Metric: React.FC<Props> = ({ data }) => (\n    <View style={styles.view}>\n        <View style={styles.leftPart}>\n            <View style={styles.section}>\n                <Text style={[styles.sectionHeader, styles.leftSectionHeader]}>Rok</Text>\n                <Text style={[styles.sectionValue, styles.leftSectionValue]}>{data.year}</Text>\n            </View>\n            <View style={styles.section}>\n                <Text style={[styles.sectionHeader, styles.leftSectionHeader]}>Miesiąc</Text>\n                <Text style={[styles.sectionValue, styles.leftSectionValue]}>{data.month}</Text>\n            </View>\n        </View>\n        <View style={styles.rightPart}>\n            <View style={styles.section}>\n                <Text style={[styles.sectionHeader, styles.rightSectionHeader]}>Imię i nazwisko</Text>\n                <Text style={[styles.sectionValue, styles.rightSectionValue]}>\n                    {data.firstName} {data.lastName}\n                </Text>\n            </View>\n            <View style={styles.section}>\n                <Text style={[styles.sectionHeader, styles.rightSectionHeader]}>Stanowisko</Text>\n                <Text style={[styles.sectionValue, styles.rightSectionValue]}>{data.position}</Text>\n            </View>\n        </View>\n    </View>\n)\n\nexport default Metric\n","import { Time } from \"../../../application/types/Time\"\n\nconst numberWithZero = (n: number) => n.toString(10).padStart(2, \"0\")\n\nexport function formatTime(time: Time): string {\n    return `${numberWithZero(time.hour)} : ${numberWithZero(time.minute)}`\n}\n\nexport function formatMinutesAsHours(minutes: number): string {\n    const hours = Math.trunc(minutes / 60)\n    const mins = minutes % 60\n\n    return mins > 0 ? `${hours.toString(10)} : ${numberWithZero(mins)}` : hours.toString(10)\n}\n","export const dayFlex = 2\nexport const workStartFlex = 3\nexport const workEndFlex = 3\nexport const hoursFlex = 2\nexport const noteFlex = 5\nexport const signatureFlex = 4\n","import { StyleSheet, Text, View } from \"@react-pdf/renderer\"\nimport React from \"react\"\nimport { WorkingTimeRecord } from \"../../types/WorkingTimeStatement\"\nimport { formatMinutesAsHours, formatTime } from \"../../utils/reportFormatters\"\nimport { dayFlex, hoursFlex, noteFlex, signatureFlex, workEndFlex, workStartFlex } from \"./constants\"\n\ntype Props = {\n    record: WorkingTimeRecord\n}\n\nconst styles = StyleSheet.create({\n    view: {\n        borderBottom: \"2\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        textAlign: \"center\",\n    },\n    value: {\n        paddingVertical: \"2\",\n    },\n    dayValue: {\n        flex: dayFlex,\n        borderRight: \"2\",\n    },\n    workStartValue: {\n        flex: workStartFlex,\n        borderRight: \"2\",\n    },\n    workEndValue: {\n        flex: workEndFlex,\n        borderRight: \"2\",\n    },\n    hoursValue: {\n        flex: hoursFlex,\n        borderRight: \"2\",\n    },\n    noteValue: {\n        flex: noteFlex,\n        borderRight: \"2\",\n    },\n    signatureValue: {\n        flex: signatureFlex,\n    },\n})\n\nconst DayRecord: React.FC<Props> = ({ record }) => {\n    return (\n        <View style={[styles.view]}>\n            <Text style={[styles.dayValue, styles.value]}>{record.dayNumber}</Text>\n            <Text style={[styles.workStartValue, styles.value]}>\n                {record.workStart ? formatTime(record.workStart) : \"---\"}\n            </Text>\n            <Text style={[styles.workEndValue, styles.value]}>\n                {record.workEnd ? formatTime(record.workEnd) : \"---\"}\n            </Text>\n            <Text style={[styles.hoursValue, styles.value]}>\n                {record.minutes ? formatMinutesAsHours(record.minutes) : \"---\"}\n            </Text>\n            <Text style={[styles.noteValue, styles.value]}>{record.note}</Text>\n            <View style={[styles.signatureValue, styles.value]}></View>\n        </View>\n    )\n}\n\nexport default DayRecord\n","import { StyleSheet, Text, View } from \"@react-pdf/renderer\"\nimport React from \"react\"\nimport { WorkingTimeRecord } from \"../../types/WorkingTimeStatement\"\nimport sortBy from \"ramda/src/sortBy\"\nimport DayRecord from \"./DayRecord\"\nimport { dayFlex, hoursFlex, noteFlex, signatureFlex, workEndFlex, workStartFlex } from \"./constants\"\n\ntype Props = {\n    records: WorkingTimeRecord[]\n}\n\nconst styles = StyleSheet.create({\n    view: {\n        borderLeft: \"2\",\n        borderRight: \"2\",\n    },\n    headerView: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        borderBottom: \"2\",\n        fontWeight: \"semibold\",\n    },\n    header: {\n        backgroundColor: \"#a0a0a0\",\n        textAlign: \"center\",\n        paddingTop: \"3\",\n        paddingBottom: \"3\",\n    },\n    dayNumberHeader: {\n        flex: dayFlex,\n        borderRight: \"2\",\n    },\n    workStartHeader: {\n        flex: workStartFlex,\n        borderRight: \"2\",\n    },\n    workEndHeader: {\n        flex: workEndFlex,\n        borderRight: \"2\",\n    },\n    hoursHeader: {\n        flex: hoursFlex,\n        borderRight: \"2\",\n    },\n    noteHeader: {\n        flex: noteFlex,\n        borderRight: \"2\",\n    },\n    signatureHeader: {\n        flex: signatureFlex,\n    },\n})\n\nconst DaysList: React.FC<Props> = ({ records }) => (\n    <View style={styles.view}>\n        <View style={styles.headerView}>\n            <View style={[styles.header, styles.dayNumberHeader]}>\n                <Text>Dzień</Text>\n            </View>\n            <View style={[styles.header, styles.workStartHeader]}>\n                <Text>Rozpoczęcie pracy</Text>\n            </View>\n            <View style={[styles.header, styles.workEndHeader]}>\n                <Text>Zakończenie pracy</Text>\n            </View>\n            <View style={[styles.header, styles.hoursHeader]}>\n                <Text>Liczba godzin</Text>\n            </View>\n            <View style={[styles.header, styles.noteHeader]}>\n                <Text>Komentarz</Text>\n            </View>\n            <View style={[styles.header, styles.signatureHeader]}>\n                <Text>Podpis pracownika</Text>\n            </View>\n        </View>\n        <View>\n            {sortBy<WorkingTimeRecord>((d) => d.dayNumber, records).map((r) => (\n                <DayRecord key={r.dayNumber} record={r} />\n            ))}\n        </View>\n    </View>\n)\n\nexport default DaysList\n","import { StyleSheet, Text, View } from \"@react-pdf/renderer\"\nimport React from \"react\"\nimport { formatMinutesAsHours } from \"../../utils/reportFormatters\"\nimport { dayFlex, hoursFlex, noteFlex, signatureFlex, workEndFlex, workStartFlex } from \"./constants\"\n\ntype Props = {\n    workedMinutes: number\n}\n\nconst styles = StyleSheet.create({\n    view: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        textAlign: \"center\",\n    },\n    header: {\n        flex: dayFlex + workStartFlex + workEndFlex,\n        fontWeight: \"semibold\",\n        backgroundColor: \"#a0a0a0\",\n        borderRight: 2,\n        borderLeft: 2,\n        borderBottom: 2,\n        paddingVertical: 2,\n        paddingRight: 1,\n    },\n    value: {\n        flex: hoursFlex,\n        borderBottom: 2,\n        borderRight: 2,\n        paddingVertical: 2,\n    },\n    emptyRight: {\n        flex: noteFlex + signatureFlex,\n    },\n})\n\nconst HoursSummary: React.FC<Props> = ({ workedMinutes }) => (\n    <View style={styles.view}>\n        <View style={styles.header}>\n            <Text>Razem</Text>\n        </View>\n        <View style={styles.value}>\n            <Text>{formatMinutesAsHours(workedMinutes)}</Text>\n        </View>\n        <View style={styles.emptyRight}></View>\n    </View>\n)\n\nexport default HoursSummary\n","import { pdf, Document, Page, View, Font, StyleSheet } from \"@react-pdf/renderer\"\nimport React from \"react\"\nimport { WorkingTimeStatement } from \"../../types/WorkingTimeStatement\"\nimport format from \"date-fns/format\"\nimport pl from \"date-fns/locale/pl\"\nimport Metric from \"./Metric\"\nimport DaysList from \"./DaysList\"\nimport HoursSummary from \"./HoursSummary\"\n\ntype Props = {\n    input: WorkingTimeStatement\n}\n\nFont.register({\n    family: \"Morrison\",\n    fonts: [\n        {\n            src: \"https://fontlibrary.org/assets/fonts/morrison/1e1a3a73d93a8835577ca88b61fc66a8/b4db25fa6cea642d69e7398dd2a46414/18Franklin18Regular.ttf\",\n            fontStyle: \"normal\",\n            fontWeight: \"normal\",\n        },\n        {\n            src: \"https://fontlibrary.org/assets/fonts/morrison/1e1a3a73d93a8835577ca88b61fc66a8/b162751cd23f047b9105c56a845be167/18Franklin18SemiBold.ttf\",\n            fontStyle: \"normal\",\n            fontWeight: \"semibold\",\n        },\n    ],\n})\n\nconst styles = StyleSheet.create({\n    page: {\n        fontFamily: \"Morrison\",\n        padding: \"2cm\",\n    },\n    reportView: {\n        width: \"100%\",\n        fontSize: \"11\",\n    },\n})\n\nconst MonthlyPdfReport: React.FC<Props> = ({ input }) => (\n    <Document\n        title={`Ewidencja czasu pracy dla ${input.firstName} ${input.lastName} za ${format(\n            new Date(input.year, input.month - 1, 1),\n            \"LLLL y\",\n            { locale: pl }\n        )} `}\n        creator={`Czasogar (${window.location.href})`}\n        producer={`Czasogar (${window.location.href})`}\n    >\n        <Page size=\"A4\" orientation=\"portrait\" style={styles.page}>\n            <View style={styles.reportView}>\n                <Metric data={input} />\n                <DaysList records={input.records} />\n                <HoursSummary workedMinutes={input.totalMinutes} />\n            </View>\n        </Page>\n    </Document>\n)\n\nexport const generateMonthlyReport: (input: WorkingTimeStatement) => Promise<Blob> = (input: WorkingTimeStatement) =>\n    pdf(<MonthlyPdfReport input={input} />).toBlob()\n","import { filter, map } from \"rxjs/operators\"\nimport { WorkingTimeRecord } from \"./../types/WorkingTimeStatement\"\nimport { SummaryDay } from \"./../types/SummaryDay\"\nimport { Time } from \"./../../../application/types/Time\"\nimport { AppState, Deps } from \"./../../../application/store/index\"\nimport { combineEpics, Epic } from \"redux-observable\"\nimport { createEpic } from \"./../../../application/store/async/AsyncActionEpic\"\nimport {\n    calculateSummaryAction,\n    generatePdfReportAction,\n    fetchPublicHolidaysAction,\n    resetGeneratePdfReportAction,\n    updateSummaryEntryAction,\n} from \"./Actions\"\nimport { Action, AnyAction } from \"redux\"\nimport { generateMonthSummary } from \"../utils/reportGenerator\"\nimport { InvalidWorkingHoursRange } from \"../types/Errors\"\nimport { generateMonthlyReport } from \"../components/report/MonthlyPdfReport\"\n\nconst publicHolidaysEpic = createEpic(fetchPublicHolidaysAction, ({ year, month }, deps) =>\n    deps.workingTimeApi.fetchPublicHolidays(year, month)\n)\n\nconst summaryEpic = createEpic(calculateSummaryAction, ({ profile }, _, state) => {\n    if (!state.workingHours.activeDate) {\n        return Promise.reject(new Error(\"Period for summary not set\"))\n    }\n    const absences = state.workingHours.absences\n    const result = generateMonthSummary(state.workingHours.activeDate, absences, profile)\n    return Promise.resolve(result)\n})\n\nconst timeAsMinutesSinceDayStart = (time: Time) => {\n    const hoursAsMinutes = time.hour * 60\n    return hoursAsMinutes + time.minute\n}\n\nconst parseRecord: (day: SummaryDay) => WorkingTimeRecord = (day: SummaryDay) => {\n    const workedMinutes = day.workingHours\n        ? timeAsMinutesSinceDayStart(day.workingHours.end) - timeAsMinutesSinceDayStart(day.workingHours.start)\n        : undefined\n    return {\n        dayNumber: day.date.getDate(),\n        workStart: day.workingHours?.start,\n        workEnd: day.workingHours?.end,\n        minutes: workedMinutes,\n        note: day.note,\n    }\n}\n\nconst generateDocumentEpic = createEpic(generatePdfReportAction, ({ summary, profile, activeDate }) => {\n    const records = summary.map(parseRecord)\n    const invalidWorkTimeRecords = records.filter((r) => r.minutes !== undefined && r.minutes < 1)\n    if (invalidWorkTimeRecords.length > 0) {\n        return Promise.reject(new InvalidWorkingHoursRange(invalidWorkTimeRecords.map((r) => r.dayNumber)))\n    }\n    const totalMinutes = records.reduce((prev, current) => prev + (current.minutes ?? 0), 0)\n    const reportInput = {\n        year: activeDate.year,\n        month: activeDate.month,\n        firstName: profile.firstName,\n        lastName: profile.lastName,\n        position: profile.position,\n        totalMinutes,\n        records: records,\n    }\n    return generateMonthlyReport(reportInput)\n})\n\nconst resetDocGenerationOnSummaryUpdateEpic: Epic<AnyAction, AnyAction, AppState, Deps> = (action$) =>\n    action$.pipe(\n        filter((a) => updateSummaryEntryAction.match(a) || calculateSummaryAction.done.match(a)),\n        map(() => resetGeneratePdfReportAction())\n    )\n\nexport const workingTimeEpics = combineEpics<Action, Action, AppState, Deps>(\n    publicHolidaysEpic,\n    summaryEpic,\n    generateDocumentEpic,\n    resetDocGenerationOnSummaryUpdateEpic\n)\n","import { workingTimeReducer } from \"./../../domain/working-time/store/Reducers\"\nimport { Action, applyMiddleware, combineReducers, compose, createStore } from \"redux\"\nimport { combineEpics, createEpicMiddleware } from \"redux-observable\"\nimport { profileEpics } from \"../../domain/application-profile/store/Epics\"\nimport { profilesReducer } from \"../../domain/application-profile/store/Reducers\"\nimport storageService from \"../api/StorageService\"\nimport workingTimeApi from \"../../domain/working-time/api/WorkingTimeApi\"\nimport { workingTimeEpics } from \"../../domain/working-time/store/Epics\"\n\nconst rootReducer = combineReducers({\n    profile: profilesReducer,\n    workingHours: workingTimeReducer,\n})\n\nexport type AppState = ReturnType<typeof rootReducer>\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst rootEpic = combineEpics(profileEpics, workingTimeEpics)\n\nconst epicDependencies = {\n    storageService: storageService,\n    workingTimeApi: workingTimeApi,\n}\n\nexport type Deps = typeof epicDependencies\n\nfunction configure() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const composeEnhancer: typeof compose = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    const epicMiddleware = createEpicMiddleware<Action, Action, AppState, Deps>({ dependencies: epicDependencies })\n\n    const store = createStore(rootReducer, composeEnhancer(applyMiddleware(epicMiddleware)))\n\n    epicMiddleware.run(rootEpic)\n    return store\n}\n\nconst applicationStore = configure()\n\nexport default applicationStore\n","import { checkbox } from \"./components/checkbox\"\nimport { button } from \"./components/button\"\nimport { colors } from \"./colors\"\nimport { styles } from \"./styles\"\nimport { extendTheme } from \"@chakra-ui/react\"\nimport { select } from \"./components/select\"\n\nconst overrides = {\n    colors,\n    styles,\n    components: {\n        Select: select,\n        Button: button,\n        Checkbox: checkbox,\n    },\n}\n\nexport const theme = extendTheme(overrides)\n","export const colors = {\n    platinum: \"#ebebeb\",\n    periwinkleCrayola: \"#d6e3f8\",\n    cooperRose: \"#a4656a\",\n    darkLiver: \"#584b53\",\n    desertSand: \"#e4bb97\",\n}\n","const globalStyles = {\n    body: {\n        bg: \"platinum\",\n        color: \"darkLiver\",\n    },\n}\n\nexport const styles = {\n    global: globalStyles,\n}\n","export const select = {\n    variants: {\n        outline: {\n            field: {\n                borderColor: \"darkLiver\",\n            },\n        },\n    },\n}\n","export const button = {\n    variants: {\n        outline: {\n            borderColor: \"darkLiver\",\n        },\n    },\n}\n","export const checkbox = {\n    baseStyle: {\n        control: {\n            borderColor: \"darkLiver\",\n        },\n    },\n}\n","import {\n    Alert,\n    AlertDescription,\n    AlertDescriptionProps,\n    AlertIcon,\n    AlertProps,\n    AlertStatus,\n    AlertTitle,\n    AlertTitleProps,\n} from \"@chakra-ui/alert\"\nimport { CloseButton } from \"@chakra-ui/close-button\"\nimport { Box } from \"@chakra-ui/layout\"\nimport React from \"react\"\n\ntype Props = {\n    icon?: boolean\n    title?: string\n    description?: string | JSX.Element\n    status?: AlertStatus\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onClose?: () => any\n    alertProps?: AlertProps\n    descriptionProps?: AlertDescriptionProps\n    titleProps?: AlertTitleProps\n}\n\nconst AlertBox: React.FC<Props> = ({\n    icon,\n    title,\n    description,\n    onClose,\n    alertProps,\n    descriptionProps,\n    titleProps,\n    status,\n}) => (\n    <Alert status={status} fontSize=\"sm\" {...(alertProps ?? {})}>\n        {icon && <AlertIcon />}\n        {title && <AlertTitle {...(titleProps ?? {})}>{title}</AlertTitle>}\n        {description && <AlertDescription {...(descriptionProps ?? {})}>{description}</AlertDescription>}\n        {onClose && <Box width=\"24px\" />}\n        {onClose && <CloseButton onClick={onClose} position=\"absolute\" right=\"3px\" top=\"3px\" />}\n    </Alert>\n)\n\nexport default AlertBox\n","import React from \"react\"\nimport AlertBox from \"./AlertBox\"\nimport { AlertProps } from \"@chakra-ui/alert\"\nimport { Accordion, AccordionButton, AccordionIcon, AccordionItem, AccordionPanel } from \"@chakra-ui/accordion\"\nimport { Box, Heading } from \"@chakra-ui/layout\"\nimport { ZodError } from \"zod\"\n\ntype Props = {\n    error: Error\n    onClose?: () => void\n    alertProps?: AlertProps\n}\n\nconst UnexpectedErrorMessage: React.FC<Props> = ({ error, alertProps, onClose }) => {\n    let detailsContent: JSX.Element\n\n    if (error instanceof ZodError) {\n        detailsContent = (\n            <Box>\n                <Box>\n                    <b>Schema Error</b>\n                </Box>\n                <Box>{JSON.stringify(error.issues)}</Box>\n            </Box>\n        )\n    } else {\n        detailsContent = (\n            <Box>\n                <Box>\n                    <b>Generic Error</b>\n                </Box>\n                <Box>{error.message}</Box>\n            </Box>\n        )\n    }\n\n    const details =\n        detailsContent === undefined ? undefined : (\n            <Accordion allowToggle={true}>\n                <AccordionItem isFocusable={false}>\n                    <AccordionButton>\n                        <Heading as=\"h6\" size=\"xs\">\n                            Szczegóły\n                        </Heading>\n                        <AccordionIcon />\n                    </AccordionButton>\n                    <AccordionPanel>{detailsContent}</AccordionPanel>\n                </AccordionItem>\n            </Accordion>\n        )\n\n    return (\n        <AlertBox\n            alertProps={{ ...(alertProps ?? {}), flexDirection: \"column\", alignItems: \"flex-start\" }}\n            descriptionProps={{ width: \"100%\" }}\n            onClose={onClose}\n            title=\"Nieoczekowany błąd\"\n            description={details}\n            status=\"error\"\n            icon={false}\n        />\n    )\n}\n\nexport default UnexpectedErrorMessage\n","import {\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from \"@chakra-ui/modal\"\nimport React from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { Profile, ProfileSchema } from \"../types/Profile\"\nimport { Stack } from \"@chakra-ui/layout\"\nimport { FormControl, FormErrorMessage, FormLabel } from \"@chakra-ui/form-control\"\nimport { Input } from \"@chakra-ui/input\"\nimport { Select } from \"@chakra-ui/select\"\nimport { Button } from \"@chakra-ui/button\"\nimport { AppState } from \"../../../application/store\"\nimport { Dispatch } from \"redux\"\nimport { addOrUpdateProfileAction } from \"../store/Actions\"\nimport { connect } from \"react-redux\"\nimport range from \"ramda/src/range\"\n\nconst DEFAULT_START_HOUR = 8\nconst DEFAULT_START_MINUTE = 30\nconst DEFAULT_END_HOUR = 16\nconst DEFAULT_END_MINUTE = 30\n\ntype Props = {\n    isOpen: boolean\n    onClose: () => void\n    canClose: boolean\n} & ReturnType<typeof mapStateToProps> &\n    ReturnType<typeof mapDispatchToProps>\n\nconst NewProfileModal: React.FC<Props> = ({ isOpen, onClose, canClose, saveProfile, saveProfileResult }) => {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors, isValidating },\n        setValue,\n    } = useForm<Profile>({\n        resolver: zodResolver(ProfileSchema),\n        defaultValues: {\n            defaultStartTime: { hour: DEFAULT_START_HOUR, minute: DEFAULT_START_MINUTE },\n            defaultEndTime: { hour: DEFAULT_END_HOUR, minute: DEFAULT_END_MINUTE },\n        },\n    })\n\n    const onSubmit = (data: Profile) => {\n        saveProfile(data)\n    }\n\n    const hourValues = range(0, 24)\n    const minuteValues = range(0, 12).map((n) => n * 5)\n\n    const onDateChange = (\n        event: React.ChangeEvent<HTMLSelectElement>,\n        field: \"defaultStartTime.hour\" | \"defaultStartTime.minute\" | \"defaultEndTime.hour\" | \"defaultEndTime.minute\"\n    ) => {\n        const newValue = Number.parseInt(event.target.value)\n        setValue(field, newValue)\n    }\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>Nowy profil użytkownika</ModalHeader>\n                {canClose && <ModalCloseButton />}\n                <ModalBody>\n                    <form onSubmit={handleSubmit(onSubmit)} id=\"new-profile-form\">\n                        <Stack spacing=\"0.5rem\">\n                            <FormControl\n                                id=\"profile-name\"\n                                isRequired={true}\n                                isInvalid={errors.profileName !== undefined}\n                            >\n                                <FormLabel fontSize=\"sm\">Nazwa profilu</FormLabel>\n                                <Input {...register(\"profileName\")} />\n                                <FormErrorMessage>{errors.profileName?.message}</FormErrorMessage>\n                            </FormControl>\n\n                            <FormControl id=\"first-name\" isRequired={true} isInvalid={errors.firstName !== undefined}>\n                                <FormLabel fontSize=\"sm\">Imię</FormLabel>\n                                <Input {...register(\"firstName\")} />\n                                <FormErrorMessage>{errors.firstName?.message}</FormErrorMessage>\n                            </FormControl>\n\n                            <FormControl id=\"last-name\" isRequired={true} isInvalid={errors.lastName !== undefined}>\n                                <FormLabel fontSize=\"sm\">Nazwisko</FormLabel>\n                                <Input {...register(\"lastName\")} />\n                                <FormErrorMessage>{errors.lastName?.message}</FormErrorMessage>\n                            </FormControl>\n\n                            <FormControl id=\"position\" isRequired={true} isInvalid={errors.position !== undefined}>\n                                <FormLabel fontSize=\"sm\">Stanowisko</FormLabel>\n                                <Input {...register(\"position\")} />\n                                <FormErrorMessage>{errors.position?.message}</FormErrorMessage>\n                            </FormControl>\n\n                            <Stack>\n                                <FormControl\n                                    id=\"default-start-time\"\n                                    isRequired={true}\n                                    isInvalid={errors.defaultStartTime !== undefined}\n                                >\n                                    <FormLabel fontSize=\"sm\">Domyślna godzina rozpoczęcia pracy</FormLabel>\n                                    <Stack direction=\"row\">\n                                        <Select\n                                            defaultValue={DEFAULT_START_HOUR}\n                                            onChange={(e) => onDateChange(e, \"defaultStartTime.hour\")}\n                                        >\n                                            {hourValues.map((h) => (\n                                                <option key={h} value={h}>\n                                                    {h}\n                                                </option>\n                                            ))}\n                                        </Select>\n                                        <Select\n                                            defaultValue={DEFAULT_START_MINUTE}\n                                            onChange={(e) => onDateChange(e, \"defaultStartTime.minute\")}\n                                        >\n                                            {minuteValues.map((m) => (\n                                                <option key={m} value={m}>\n                                                    {m}\n                                                </option>\n                                            ))}\n                                        </Select>\n                                        <FormErrorMessage>\n                                            {/* eslint-disable-next-line @typescript-eslint/no-explicit-any */}\n                                            {(errors.defaultStartTime as any | undefined)?.message}\n                                        </FormErrorMessage>\n                                    </Stack>\n                                    <FormErrorMessage>{errors.defaultStartTime?.hour?.message}</FormErrorMessage>\n                                    <FormErrorMessage>{errors.defaultStartTime?.minute?.message}</FormErrorMessage>\n                                </FormControl>\n                                <FormControl\n                                    id=\"default-end-time\"\n                                    isRequired={true}\n                                    isInvalid={errors.defaultEndTime !== undefined}\n                                >\n                                    <FormLabel fontSize=\"sm\">Domyślna godzina zakończenia pracy</FormLabel>\n                                    <Stack direction=\"row\">\n                                        <Select\n                                            defaultValue={DEFAULT_END_HOUR}\n                                            onChange={(e) => onDateChange(e, \"defaultEndTime.hour\")}\n                                        >\n                                            {hourValues.map((h) => (\n                                                <option key={h} value={h}>\n                                                    {h}\n                                                </option>\n                                            ))}\n                                        </Select>\n                                        <Select\n                                            defaultValue={DEFAULT_END_MINUTE}\n                                            onChange={(e) => {\n                                                onDateChange(e, \"defaultEndTime.minute\")\n                                            }}\n                                        >\n                                            {minuteValues.map((m) => (\n                                                <option key={m} value={m}>\n                                                    {m}\n                                                </option>\n                                            ))}\n                                        </Select>\n                                    </Stack>\n                                    <FormErrorMessage>\n                                        {/* eslint-disable-next-line @typescript-eslint/no-explicit-any */}\n                                        {(errors.defaultEndTime as any | undefined)?.message}\n                                    </FormErrorMessage>\n                                    <FormErrorMessage>{errors.defaultEndTime?.hour?.message}</FormErrorMessage>\n                                    <FormErrorMessage>{errors.defaultEndTime?.minute?.message}</FormErrorMessage>\n                                </FormControl>\n                            </Stack>\n                        </Stack>\n                    </form>\n                </ModalBody>\n\n                <ModalFooter>\n                    {canClose && (\n                        <Button onClick={onClose} marginRight=\"0.5rem\">\n                            Anuluj\n                        </Button>\n                    )}\n                    <Button\n                        type=\"submit\"\n                        form=\"new-profile-form\"\n                        loadingText=\"Stwórz\"\n                        isLoading={isValidating || saveProfileResult.status === \"PENDING\"}\n                        colorScheme=\"blue\"\n                    >\n                        Stwórz\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    saveProfileResult: state.profile.updateProfileResult,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    saveProfile: (profile: Profile) => dispatch(addOrUpdateProfileAction.started(profile)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewProfileModal)\n","import { Box, Flex } from \"@chakra-ui/layout\"\nimport React from \"react\"\nimport Spinner from \"react-spinkit\"\n\ntype Props = {\n    text: string\n}\n\nconst FullPageLoader: React.FC<Props> = ({ text }) => {\n    return (\n        <Flex alignItems=\"center\" direction=\"column\" marginTop=\"30vh\">\n            <Box>\n                <Spinner name=\"pacman\" color=\"#584b53\" />\n            </Box>\n            <Box>{text}</Box>\n        </Flex>\n    )\n}\n\nexport default FullPageLoader\n","import { Box, BoxProps, Divider, Heading } from \"@chakra-ui/layout\"\nimport React from \"react\"\n\ntype Props = {\n    header: string\n    containerProps?: BoxProps\n}\n\nconst Card: React.FC<Props> = ({ children, header, containerProps }) => (\n    <Box {...(containerProps ?? {})}>\n        <Box\n            shadow=\"lg\"\n            rounded=\"lg\"\n            paddingX=\"2rem\"\n            paddingY=\"1.5rem\"\n            backgroundColor=\"periwinkleCrayola\"\n            width={[\"2xs\", \"md\", \"lg\", \"3xl\"]}\n        >\n            <Box>\n                <Heading as=\"h3\" size=\"lg\">\n                    {header}\n                </Heading>\n                <Divider borderColor=\"darkLiver\" />\n            </Box>\n            <Box marginTop=\"0.2rem\">{children}</Box>\n        </Box>\n    </Box>\n)\n\nexport default Card\n","import { Box, Flex, Heading } from \"@chakra-ui/layout\"\nimport { Select } from \"@chakra-ui/select\"\nimport React from \"react\"\nimport { PublicHolidaysParams, setActiveDateAction } from \"../../store/Actions\"\nimport { pl } from \"date-fns/locale\"\nimport { Dispatch } from \"redux\"\nimport { connect } from \"react-redux\"\nimport { IconButton } from \"@chakra-ui/button\"\nimport { BsCalendarEvent } from \"react-icons/bs\"\nimport { Tooltip } from \"@chakra-ui/tooltip\"\nimport range from \"ramda/src/range\"\n\ntype Props = {\n    activeDate: PublicHolidaysParams\n} & ReturnType<typeof mapDispatchToProps>\n\nconst stepValues = (count: number, baseValue: number, multiplier: number) =>\n    range(0, count).map((v) => baseValue + (v + 1) * multiplier)\n\nconst ActiveDateSelect: React.FC<Props> = ({ activeDate, updateActiveDate }) => {\n    const months = range(0, 12).map((m) => m + 1)\n\n    const prevYears = stepValues(3, activeDate.year, -1).reverse()\n    const nextYears = stepValues(3, activeDate.year, 1)\n    const years = [...prevYears, activeDate.year].concat(nextYears)\n\n    return (\n        <Flex direction=\"column\" alignItems=\"center\">\n            <Heading as=\"h5\" size=\"sm\">\n                Zestawienie za miesiąc\n            </Heading>\n            <Flex>\n                <Box marginX=\"0.2rem\">\n                    <Select\n                        defaultValue={activeDate.month}\n                        onChange={(e) => updateActiveDate(Number.parseInt(e.target.value, 10), activeDate.year)}\n                    >\n                        {months.map((m) => (\n                            <option key={m} value={m}>\n                                {pl.localize?.month(m - 1)}\n                            </option>\n                        ))}\n                    </Select>\n                </Box>\n                <Box marginX=\"0.2rem\">\n                    <Select\n                        defaultValue={activeDate.year}\n                        onChange={(e) => updateActiveDate(activeDate.month, Number.parseInt(e.target.value, 10))}\n                    >\n                        {years.map((y) => (\n                            <option key={y} value={y}>\n                                {y}\n                            </option>\n                        ))}\n                    </Select>\n                </Box>\n                <Box>\n                    <Tooltip label=\"Przejdź do bieżącego miesiąca\">\n                        <IconButton\n                            aria-label=\"Przejdź do bieżącego miesiąca\"\n                            variant=\"outline\"\n                            icon={<BsCalendarEvent />}\n                            onClick={() => {\n                                const now = new Date()\n                                updateActiveDate(now.getMonth() + 1, now.getFullYear())\n                            }}\n                        />\n                    </Tooltip>\n                </Box>\n            </Flex>\n        </Flex>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    updateActiveDate: (month: number, year: number) => dispatch(setActiveDateAction({ month, year })),\n})\n\nexport default connect(null, mapDispatchToProps)(ActiveDateSelect)\n","import React, { useState } from \"react\"\nimport {\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n} from \"@chakra-ui/modal\"\nimport getDaysInMonth from \"date-fns/getDaysInMonth\"\nimport { ActiveDateParams, addAbsenceAction } from \"../../../store/Actions\"\nimport { Button } from \"@chakra-ui/button\"\nimport { Input } from \"@chakra-ui/input\"\nimport DatePicker from \"react-datepicker\"\nimport { pl } from \"date-fns/locale\"\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport { Dispatch } from \"redux\"\nimport { Absence, DateOrRange } from \"../../../types/Absence\"\nimport { connect } from \"react-redux\"\n\ntype Props = {\n    isOpen: boolean\n    onClose: () => void\n    activeDate: ActiveDateParams\n} & ReturnType<typeof mapDispatchToProps>\n\nconst AddAbsenceModal: React.FC<Props> = ({ isOpen, onClose, activeDate, addAbsence }) => {\n    const [startDate, setStartDate] = useState<Date | null>(null)\n    const [endDate, setEndDate] = useState<Date | null>(null)\n    const [note, setNote] = useState<string>(\"\")\n\n    const daysInMonth = getDaysInMonth(new Date(activeDate.year, activeDate.month - 1))\n\n    const minDate = new Date(activeDate.year, activeDate.month - 1, 1)\n    const maxDate = new Date(activeDate.year, activeDate.month - 1, daysInMonth)\n\n    const handleClose = () => {\n        setStartDate(null)\n        setEndDate(null)\n        setNote(\"\")\n        onClose()\n    }\n\n    const onDateUpdate = (update: Date | [Date | null, Date | null] | null) => {\n        if (update === null) {\n            return\n        } else if (update instanceof Date) {\n            setStartDate(update)\n            setEndDate(null)\n        } else {\n            const [start, end] = update\n            setStartDate(start ?? null)\n            setEndDate(end ?? null)\n        }\n    }\n\n    const confirm = () => {\n        if (startDate && endDate) {\n            const date: DateOrRange = endDate.getDate() > startDate.getDate() ? [startDate, endDate] : startDate\n            const id = uuidv4()\n            const maybeNote = note.trim().length > 0 ? note.trim() : undefined\n            const absence: Absence = { id, date, note: maybeNote, type: \"Custom\" }\n            addAbsence(absence)\n            handleClose()\n        }\n    }\n\n    return (\n        <Modal isOpen={isOpen} onClose={handleClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>Dodaj nieobecność</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    <DatePicker\n                        onChange={onDateUpdate}\n                        locale={pl}\n                        minDate={minDate}\n                        maxDate={maxDate}\n                        selectsRange={true}\n                        inline={true}\n                        startDate={startDate}\n                        endDate={endDate}\n                    />\n                    <FormControl id=\"note\">\n                        <FormLabel fontSize=\"sm\">Notatka</FormLabel>\n                        <Input value={note} onChange={(e) => setNote(e.target.value)} />\n                    </FormControl>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button onClick={handleClose} marginRight=\"0.5rem\">\n                        Anuluj\n                    </Button>\n\n                    <Button colorScheme=\"blue\" disabled={!startDate || !endDate} onClick={confirm}>\n                        Dodaj\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    addAbsence: (absence: Absence) => dispatch(addAbsenceAction(absence)),\n})\n\nexport default connect(null, mapDispatchToProps)(AddAbsenceModal)\n","import pl from \"date-fns/locale/pl\"\nimport format from \"date-fns/format\"\n\nexport type DateOrRange = Date | [Date, Date]\n\nexport const formatDateOrRange: (input: DateOrRange) => string = (input: DateOrRange) =>\n    input instanceof Date\n        ? format(input, \"PP\", { locale: pl })\n        : `${formatDateOrRange(input[0])} - ${formatDateOrRange(input[1])}`\n\nexport type Absence = {\n    id: string\n    date: DateOrRange\n    note?: string\n    type: \"PublicHoliday\" | \"Custom\"\n}\n","import { Box, Text, Wrap } from \"@chakra-ui/layout\"\nimport React from \"react\"\nimport { Absence, formatDateOrRange } from \"../../../types/Absence\"\nimport { IconButton } from \"@chakra-ui/button\"\nimport { IoTrashOutline } from \"react-icons/io5\"\nimport { Dispatch } from \"redux\"\nimport { removeAbsenceAction } from \"../../../store/Actions\"\nimport { connect } from \"react-redux\"\n\ntype Props = {\n    absence: Absence\n} & ReturnType<typeof mapDispatchToProps>\n\nconst CustomAbsenceEntry: React.FC<Props> = ({ absence, deleteAbsence }) => {\n    return (\n        <Wrap>\n            <IconButton\n                aria-label=\"Skasuj\"\n                icon={<IoTrashOutline />}\n                variant=\"ghost\"\n                size=\"xs\"\n                colorScheme=\"red\"\n                onClick={() => deleteAbsence(absence.id)}\n            />\n            <Box>{formatDateOrRange(absence.date)}</Box>\n            <Box wordBreak=\"break-word\">\n                <Text as=\"b\">{absence.note}</Text>\n            </Box>\n        </Wrap>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    deleteAbsence: (id: string) => dispatch(removeAbsenceAction(id)),\n})\n\nexport default connect(null, mapDispatchToProps)(CustomAbsenceEntry)\n","import { Button } from \"@chakra-ui/button\"\nimport { useDisclosure } from \"@chakra-ui/hooks\"\nimport { Box } from \"@chakra-ui/layout\"\nimport React from \"react\"\nimport { GoDiffAdded } from \"react-icons/go\"\nimport { connect } from \"react-redux\"\nimport { AppState } from \"../../../../../application/store\"\nimport { ActiveDateParams } from \"../../../store/Actions\"\nimport AddAbsenceModal from \"./AddAbsenceModal\"\nimport CustomAbsenceEntry from \"./CustomAbsenceEntry\"\nimport sortBy from \"ramda/src/sortBy\"\nimport { Absence } from \"../../../types/Absence\"\n\ntype Props = {\n    activeDate: ActiveDateParams\n} & ReturnType<typeof mapStateToProps>\n\nconst CustomAbsencesPanel: React.FC<Props> = ({ activeDate, customAbsences }) => {\n    const addAbsenceModal = useDisclosure()\n\n    const sortAbsenceByDate = sortBy<Absence>((a) => (a.date instanceof Date ? a.date.getTime() : a.date[0].getTime()))\n\n    return (\n        <Box marginTop=\"1rem\">\n            <AddAbsenceModal\n                isOpen={addAbsenceModal.isOpen}\n                onClose={addAbsenceModal.onClose}\n                activeDate={activeDate}\n            />\n            <Button size=\"sm\" colorScheme=\"blue\" leftIcon={<GoDiffAdded />} onClick={addAbsenceModal.onOpen}>\n                Dodaj nieobencość\n            </Button>\n            <Box marginTop=\"1rem\">\n                {sortAbsenceByDate(customAbsences).map((a) => (\n                    <CustomAbsenceEntry key={a.id} absence={a} />\n                ))}\n            </Box>\n        </Box>\n    )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    customAbsences: state.workingHours.absences.filter((a) => a.type === \"Custom\"),\n})\n\nexport default connect(mapStateToProps)(CustomAbsencesPanel)\n","import { Box, Text, Wrap } from \"@chakra-ui/layout\"\nimport React from \"react\"\nimport { PublicHoliday } from \"../../../types/PublicHoliday\"\nimport format from \"date-fns/format\"\nimport pl from \"date-fns/locale/pl\"\nimport { Checkbox } from \"@chakra-ui/checkbox\"\nimport { AppState } from \"../../../../../application/store\"\nimport { Dispatch } from \"redux\"\nimport { addAbsenceAction, removeAbsenceAction } from \"../../../store/Actions\"\nimport { connect } from \"react-redux\"\n\ntype Props = {\n    entry: PublicHoliday\n} & ReturnType<typeof mapStateToProps> &\n    ReturnType<typeof mapDispatchToProps>\n\nconst PublicHolidayEntry: React.FC<Props> = ({ entry, publicHolidaysAbsences, addAbsence, deleteAbsence }) => {\n    return (\n        <Wrap marginTop=\"1rem\">\n            <Checkbox\n                isChecked={publicHolidaysAbsences.some((a) => a.id === entry.id)}\n                onChange={(e) => (e.target.checked ? addAbsence(entry) : deleteAbsence(entry.id))}\n            />\n            <Box>{format(entry.date, \"PP\", { locale: pl })}</Box>\n            <Box>\n                <Text as=\"b\">{entry.localName}</Text>\n            </Box>\n        </Wrap>\n    )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    publicHolidaysAbsences: state.workingHours.absences.filter((a) => a.type === \"PublicHoliday\"),\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    addAbsence: (holiday: PublicHoliday) =>\n        dispatch(\n            addAbsenceAction({ id: holiday.id, date: holiday.date, note: holiday.localName, type: \"PublicHoliday\" })\n        ),\n    deleteAbsence: (id: string) => dispatch(removeAbsenceAction(id)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PublicHolidayEntry)\n","import { Box } from \"@chakra-ui/layout\"\nimport React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport AlertBox from \"../../../../../application/components/common/AlertBox\"\nimport { setAbsencesAction } from \"../../../store/Actions\"\nimport { Absence } from \"../../../types/Absence\"\nimport { PublicHoliday } from \"../../../types/PublicHoliday\"\nimport PublicHolidayEntry from \"./PublicHolidayEntry\"\n\ntype Props = {\n    availablePublicHolidays: PublicHoliday[] | null\n} & ReturnType<typeof mapDispatchToProps>\n\nconst PublicHolidaysPanel: React.FC<Props> = ({ availablePublicHolidays, setAbsences }) => {\n    useEffect(() => {\n        const absences: Absence[] = (availablePublicHolidays ?? []).map((h) => ({\n            id: h.id,\n            date: h.date,\n            note: h.localName,\n            type: \"PublicHoliday\",\n        }))\n        setAbsences(absences)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <Box>\n            {availablePublicHolidays === null && (\n                <AlertBox\n                    icon={true}\n                    title=\"Nie udało się pobrać informacji o dniach wolnych. Dodaj te informacje ręcznie lub spróbuj odświeżyć stronę.\"\n                    status=\"warning\"\n                />\n            )}\n            {(availablePublicHolidays ?? []).map((h) => (\n                <PublicHolidayEntry key={h.id} entry={h} />\n            ))}\n        </Box>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    setAbsences: (absences: Absence[]) => dispatch(setAbsencesAction(absences)),\n})\n\nexport default connect(null, mapDispatchToProps)(PublicHolidaysPanel)\n","import { Button } from \"@chakra-ui/button\"\nimport { Flex } from \"@chakra-ui/layout\"\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport Card from \"../../../../application/components/common/Card\"\nimport UnexpectedErrorMessage from \"../../../../application/components/common/UnexpectedErrorMessage\"\nimport { AppState } from \"../../../../application/store\"\nimport { Profile } from \"../../../application-profile/types/Profile\"\nimport { ActiveDateParams, calculateSummaryAction } from \"../../store/Actions\"\nimport { PublicHoliday } from \"../../types/PublicHoliday\"\nimport ActiveDateSelect from \"./ActiveDateSelect\"\nimport CustomAbsencesPanel from \"./custom-absences/CustomAbsencesPanel\"\nimport PublicHolidaysPanel from \"./public-holidays/PublicHolidaysPanel\"\n\ntype Props = {\n    publicHolidays: PublicHoliday[] | null\n    profile: Profile\n    activeDate: ActiveDateParams\n} & ReturnType<typeof mapStateToProps> &\n    ReturnType<typeof mapDispatchToProps>\n\nconst AbsencesPage: React.FC<Props> = ({ publicHolidays, profile, activeDate, calculateSummary, summaryResult }) => (\n    <Flex alignItems=\"center\" direction=\"column\">\n        <ActiveDateSelect activeDate={activeDate} />\n        {summaryResult.status === \"FAILED\" && (\n            <UnexpectedErrorMessage error={summaryResult.error} alertProps={{ maxWidth: \"3xl\", marginTop: \"0.5rem\" }} />\n        )}\n        <Card header=\"Dni wolne\" containerProps={{ marginTop: \"0.5rem\" }}>\n            <PublicHolidaysPanel availablePublicHolidays={publicHolidays} />\n        </Card>\n        <Card header=\"Nieobecności\" containerProps={{ marginTop: \"1rem\" }}>\n            <CustomAbsencesPanel activeDate={activeDate} />\n        </Card>\n        <Button\n            marginTop=\"1rem\"\n            colorScheme=\"blue\"\n            size=\"lg\"\n            onClick={() => calculateSummary(profile)}\n            loadingText=\"Generuję\"\n            isLoading={summaryResult.status === \"PENDING\"}\n        >\n            Wygeneruj\n        </Button>\n    </Flex>\n)\n\nconst mapStateToProps = (state: AppState) => ({\n    summaryResult: state.workingHours.monthSummary,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    calculateSummary: (profile: Profile) => dispatch(calculateSummaryAction.started({ profile })),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AbsencesPage)\n","import { Input, InputProps } from \"@chakra-ui/input\"\nimport { Box, BoxProps, Stack } from \"@chakra-ui/layout\"\nimport React, { useState } from \"react\"\nimport { Time } from \"../../types/Time\"\n\nconst baseInputProps = {\n    width: \"3rem\",\n    borderWidth: \"0\",\n}\n\ntype PartialInputProps = Omit<\n    InputProps,\n    \"value\" | \"defaultValue\" | \"onChange\" | \"onBlur\" | keyof typeof baseInputProps\n>\n\ntype Props = {\n    defaultValue?: Time\n    onChange: (time: Time) => void\n    inputProps?: PartialInputProps\n    containerProps?: BoxProps\n}\n\nconst TimePicker: React.FC<Props> = ({ inputProps, containerProps, defaultValue, onChange }) => {\n    const defaults: Time = defaultValue ?? { hour: 0, minute: 0 }\n    const defaultHour = defaults.hour < 0 || defaults.hour > 23 ? 0 : Math.trunc(defaults.hour)\n    const defaultMinute = defaults.minute < 0 || defaults.minute > 59 ? 0 : Math.trunc(defaults.minute)\n\n    const [hour, setHour] = useState<string>(defaultHour.toString(10))\n    const [minute, setMinute] = useState<string>(defaultMinute.toString(10))\n    const [lastValues, setLastValues] = useState<Time>({ hour: defaultHour, minute: defaultMinute })\n\n    const onInputChange = (event: React.ChangeEvent<HTMLInputElement>, fn: (n: string) => void) => {\n        const asNumber = Math.trunc(Number(event.target.value))\n        if (Number.isNaN(asNumber) || event.target.value.length > 2) {\n            return\n        }\n        fn(event.target.value.replace(\".\", \"\"))\n    }\n\n    const onBlur = () => {\n        const hourNumber = Number(hour)\n        const minuteNumber = Number(minute)\n        let h = hourNumber\n        let m = minuteNumber\n\n        if (h < 0 || h > 23) {\n            h = defaultHour\n            setHour(defaultHour.toString(10))\n        }\n        if (m < 0 || m > 59) {\n            m = defaultMinute\n            setMinute(defaultMinute.toString(10))\n        }\n        if (lastValues.hour !== h || lastValues.minute !== m) {\n            onChange({ hour: h, minute: m })\n            setLastValues({ hour: h, minute: m })\n        }\n    }\n\n    return (\n        <Box borderWidth=\"2px\" borderColor=\"darkLiver\" padding=\"2px\" borderRadius=\"md\" {...(containerProps ?? {})}>\n            <Stack direction=\"row\">\n                <Input\n                    size=\"sm\"\n                    {...(inputProps ?? {})}\n                    {...baseInputProps}\n                    value={hour}\n                    onChange={(e) => onInputChange(e, setHour)}\n                    onBlur={onBlur}\n                />\n                <Input\n                    size=\"sm\"\n                    {...(inputProps ?? {})}\n                    {...baseInputProps}\n                    value={minute}\n                    onChange={(e) => onInputChange(e, setMinute)}\n                    onBlur={onBlur}\n                />\n            </Stack>\n        </Box>\n    )\n}\n\nexport default TimePicker\n","import { Input, InputProps } from \"@chakra-ui/input\"\nimport React, { useState } from \"react\"\n\ntype PartialInputProps = Omit<InputProps, \"value\" | \"defaultValue\" | \"onChange\" | \"onBlur\">\n\ntype Props = {\n    defaultValue?: string\n    onChange: (note: string) => void\n    inputProps?: PartialInputProps\n}\n\nconst NoteInput: React.FC<Props> = ({ defaultValue, onChange, inputProps }) => {\n    const [value, setValue] = useState<string>(defaultValue ?? \"\")\n    const [lastUpdated, setLastUpdated] = useState<string>(defaultValue ?? \"\")\n\n    const onBlur = () => {\n        if (lastUpdated === value) {\n            return\n        }\n        onChange(value)\n        setLastUpdated(value)\n    }\n\n    return (\n        <Input\n            borderColor=\"darkLiver\"\n            onChange={(e) => setValue(e.target.value)}\n            onBlur={onBlur}\n            value={value}\n            {...(inputProps ?? {})}\n        />\n    )\n}\n\nexport default NoteInput\n","import { Box, Stack, Text } from \"@chakra-ui/layout\"\nimport React from \"react\"\nimport { SummaryDay } from \"../../../types/SummaryDay\"\nimport format from \"date-fns/format\"\nimport pl from \"date-fns/locale/pl\"\nimport { Checkbox } from \"@chakra-ui/checkbox\"\nimport TimePicker from \"../../../../../application/components/common/TimePicker\"\nimport { connect } from \"react-redux\"\nimport { AppState } from \"../../../../../application/store\"\nimport { Dispatch } from \"redux\"\nimport { updateSummaryEntryAction } from \"../../../store/Actions\"\nimport { Profile } from \"../../../../application-profile/types/Profile\"\nimport { Time } from \"../../../../../application/types/Time\"\nimport { InvalidWorkingHoursRange } from \"../../../types/Errors\"\nimport NoteInput from \"./NoteInput\"\n\ntype Props = {\n    summaryDay: SummaryDay\n    profile: Profile\n} & ReturnType<typeof mapStateToProps> &\n    ReturnType<typeof mapDispatchToProps>\n\nconst CompactSummaryEntry: React.FC<Props> = ({ summaryDay, collectDataResult, updateEntry, profile }) => {\n    const onTimeChange = (newTime: Time, target: \"start\" | \"end\") => {\n        if (!summaryDay.workingHours) {\n            return\n        }\n        const start = target === \"start\" ? newTime : summaryDay.workingHours.start\n        const end = target === \"end\" ? newTime : summaryDay.workingHours.end\n\n        const updated: SummaryDay = { ...summaryDay, workingHours: { start, end } }\n        updateEntry(updated)\n    }\n\n    const isInvalidTimeRange =\n        collectDataResult.status === \"FAILED\" &&\n        collectDataResult.error instanceof InvalidWorkingHoursRange &&\n        collectDataResult.error.dayNumbers.includes(summaryDay.date.getDate())\n\n    return (\n        <Box border=\"solid\" borderRadius=\"md\" marginY=\"1.5em\" padding=\"0 1em 1em\">\n            <Box transform=\"translatey(-50%)\" width=\"max-content\" background=\"platinum\" paddingX=\"0.15em\">\n                {format(summaryDay.date, \"P\", { locale: pl })} ({summaryDay.dayName})\n            </Box>\n            <Stack>\n                <Box>\n                    <Stack direction=\"row\">\n                        <Checkbox\n                            defaultChecked={summaryDay.workingHours !== null}\n                            onChange={(e) => {\n                                const workingHours = e.target.checked\n                                    ? { start: profile.defaultStartTime, end: profile.defaultEndTime }\n                                    : null\n                                updateEntry({ ...summaryDay, workingHours })\n                            }}\n                        />\n                        {summaryDay.workingHours ? (\n                            <TimePicker\n                                containerProps={{ border: \"1px\" }}\n                                defaultValue={summaryDay.workingHours.start}\n                                onChange={(t) => onTimeChange(t, \"start\")}\n                            />\n                        ) : null}\n                        {summaryDay.workingHours ? (\n                            <TimePicker\n                                containerProps={{ border: \"1px\" }}\n                                defaultValue={summaryDay.workingHours.end}\n                                onChange={(t) => onTimeChange(t, \"end\")}\n                            />\n                        ) : null}\n                    </Stack>\n                    {isInvalidTimeRange && (\n                        <Text as=\"i\" color=\"red.400\" fontSize=\"xs\">\n                            Zakres godzin jest nieprawidłowy\n                        </Text>\n                    )}\n                </Box>\n                <NoteInput defaultValue={summaryDay.note} onChange={(note) => updateEntry({ ...summaryDay, note })} />\n            </Stack>\n        </Box>\n    )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    collectDataResult: state.workingHours.pdfReportResult,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    updateEntry: (newEntry: SummaryDay) => dispatch(updateSummaryEntryAction(newEntry)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompactSummaryEntry)\n","import { Box } from \"@chakra-ui/layout\"\nimport React from \"react\"\nimport { Profile } from \"../../../../application-profile/types/Profile\"\nimport { SummaryDay } from \"../../../types/SummaryDay\"\nimport CompactSummaryEntry from \"./CompactSummaryEntry\"\n\ntype Props = {\n    summary: SummaryDay[]\n    profile: Profile\n}\n\nconst CompactSummaryTable: React.FC<Props> = ({ summary, profile }) => (\n    <Box>\n        {summary.map((d) => (\n            <CompactSummaryEntry key={d.date.getDate()} summaryDay={d} profile={profile} />\n        ))}\n    </Box>\n)\n\nexport default CompactSummaryTable\n","import React from \"react\"\nimport format from \"date-fns/format\"\nimport pl from \"date-fns/locale/pl\"\nimport { Checkbox } from \"@chakra-ui/checkbox\"\nimport { Td, Tr } from \"@chakra-ui/table\"\nimport { SummaryDay } from \"../../../types/SummaryDay\"\nimport TimePicker from \"../../../../../application/components/common/TimePicker\"\nimport { Dispatch } from \"redux\"\nimport { updateSummaryEntryAction } from \"../../../store/Actions\"\nimport { connect } from \"react-redux\"\nimport { Profile } from \"../../../../application-profile/types/Profile\"\nimport { Time } from \"../../../../../application/types/Time\"\nimport { AppState } from \"../../../../../application/store\"\nimport { Box, Flex, Text } from \"@chakra-ui/layout\"\nimport { InvalidWorkingHoursRange } from \"../../../types/Errors\"\nimport NoteInput from \"./NoteInput\"\n\ntype Props = {\n    summaryDay: SummaryDay\n    profile: Profile\n} & ReturnType<typeof mapStateToProps> &\n    ReturnType<typeof mapDispatchToProps>\n\nconst FullSizeSummaryEntry: React.FC<Props> = ({ summaryDay, updateEntry, profile, collectDataResult }) => {\n    const onTimeChange = (newTime: Time, target: \"start\" | \"end\") => {\n        if (!summaryDay.workingHours) {\n            return\n        }\n        const start = target === \"start\" ? newTime : summaryDay.workingHours.start\n        const end = target === \"end\" ? newTime : summaryDay.workingHours.end\n\n        const updated: SummaryDay = { ...summaryDay, workingHours: { start, end } }\n        updateEntry(updated)\n    }\n\n    const isInvalidTimeRange =\n        collectDataResult.status === \"FAILED\" &&\n        collectDataResult.error instanceof InvalidWorkingHoursRange &&\n        collectDataResult.error.dayNumbers.includes(summaryDay.date.getDate())\n\n    return (\n        <>\n            <Tr>\n                <Td>\n                    <Checkbox\n                        size=\"lg\"\n                        defaultChecked={summaryDay.workingHours !== null}\n                        onChange={(e) => {\n                            const workingHours = e.target.checked\n                                ? { start: profile.defaultStartTime, end: profile.defaultEndTime }\n                                : null\n                            updateEntry({ ...summaryDay, workingHours })\n                        }}\n                    />\n                </Td>\n                <Td>\n                    {format(summaryDay.date, \"P\", { locale: pl })} ({summaryDay.dayName})\n                </Td>\n                <Td>\n                    <NoteInput\n                        defaultValue={summaryDay.note}\n                        onChange={(note) => updateEntry({ ...summaryDay, note })}\n                        inputProps={{ minWidth: \"10rem\" }}\n                    />\n                </Td>\n                <Td>\n                    <Box>\n                        <Flex>\n                            {summaryDay.workingHours ? (\n                                <TimePicker\n                                    containerProps={{ borderWidth: \"1px\" }}\n                                    defaultValue={summaryDay.workingHours.start}\n                                    onChange={(t) => onTimeChange(t, \"start\")}\n                                />\n                            ) : null}\n                            {summaryDay.workingHours ? (\n                                <TimePicker\n                                    containerProps={{\n                                        borderWidth: \"1px\",\n                                        marginLeft: \"0.2rem\",\n                                    }}\n                                    defaultValue={summaryDay.workingHours.end}\n                                    onChange={(t) => onTimeChange(t, \"end\")}\n                                />\n                            ) : null}\n                        </Flex>\n                        {isInvalidTimeRange && (\n                            <Text as=\"i\" color=\"red.400\" fontSize=\"xs\">\n                                Zakres godzin jest nieprawidłowy\n                            </Text>\n                        )}\n                    </Box>\n                </Td>\n            </Tr>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    collectDataResult: state.workingHours.pdfReportResult,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    updateEntry: (newEntry: SummaryDay) => dispatch(updateSummaryEntryAction(newEntry)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FullSizeSummaryEntry)\n","import { Table, Tbody } from \"@chakra-ui/table\"\nimport React from \"react\"\nimport { Profile } from \"../../../../application-profile/types/Profile\"\nimport { SummaryDay } from \"../../../types/SummaryDay\"\nimport FullSizeSummaryEntry from \"./FullSizeSummaryEntry\"\n\ntype Props = { summary: SummaryDay[]; profile: Profile }\n\nconst StandardSummaryTable: React.FC<Props> = ({ summary, profile }) => (\n    <Table colorScheme=\"blue\" size=\"sm\">\n        <Tbody>\n            {summary.map((d) => (\n                <FullSizeSummaryEntry key={d.date.getDate()} summaryDay={d} profile={profile} />\n            ))}\n        </Tbody>\n    </Table>\n)\n\nexport default StandardSummaryTable\n","import { Button } from \"@chakra-ui/button\"\nimport { Box, Flex } from \"@chakra-ui/layout\"\nimport { useBreakpointValue } from \"@chakra-ui/media-query\"\nimport React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport FullPageLoader from \"../../../../application/components/common/FullPageLoader\"\nimport UnexpectedErrorMessage from \"../../../../application/components/common/UnexpectedErrorMessage\"\nimport { AppState } from \"../../../../application/store\"\nimport { Profile } from \"../../../application-profile/types/Profile\"\nimport { ActiveDateParams, generatePdfReportAction, resetGeneratePdfReportAction } from \"../../store/Actions\"\nimport { SummaryDay } from \"../../types/SummaryDay\"\nimport ActiveDateSelect from \"../absences/ActiveDateSelect\"\nimport CompactSummaryTable from \"./summary-table/CompactSummaryTable\"\nimport StandardSummaryTable from \"./summary-table/FullSizeSummaryTable\"\nimport FileSaver from \"file-saver\"\n\ntype Props = {\n    summary: SummaryDay[]\n    activeDate: ActiveDateParams\n    profile: Profile\n} & ReturnType<typeof mapStateToProps> &\n    ReturnType<typeof mapDispatchToProps>\n\nconst MonthSummaryPage: React.FC<Props> = ({\n    summary,\n    activeDate,\n    profile,\n    generateReport,\n    generateReportResult,\n    resetReportStatus,\n}) => {\n    const fullSize = useBreakpointValue({ base: false, md: true })\n\n    useEffect(() => {\n        if (generateReportResult.status === \"FINISHED\") {\n            const year = generateReportResult.params.activeDate.year\n            const month = generateReportResult.params.activeDate.month\n            const lastName = generateReportResult.params.profile.lastName\n            const firstName = generateReportResult.params.profile.firstName\n            const fileName = `ewidencja_czasu_pracy_${year}_${month}_${lastName}_${firstName}.pdf`\n            const blob = generateReportResult.data\n            resetReportStatus()\n            FileSaver.saveAs(blob, fileName)\n        }\n    })\n\n    if (generateReportResult.status === \"PENDING\") {\n        return <FullPageLoader text=\"Generowanie dokumentu\" />\n    } else {\n        return (\n            <Flex alignItems=\"center\" direction=\"column\">\n                <ActiveDateSelect activeDate={activeDate} />\n                {generateReportResult.status === \"FAILED\" && (\n                    <UnexpectedErrorMessage\n                        error={generateReportResult.error}\n                        alertProps={{ maxWidth: \"3xl\", marginTop: \"0.5rem\" }}\n                    />\n                )}\n                <Box marginTop=\"0.5rem\">\n                    {fullSize ? (\n                        <StandardSummaryTable summary={summary} profile={profile} />\n                    ) : (\n                        <CompactSummaryTable summary={summary} profile={profile} />\n                    )}\n                </Box>\n                <Button\n                    marginTop=\"0.5rem\"\n                    colorScheme=\"blue\"\n                    size=\"lg\"\n                    onClick={() => generateReport(summary, profile, activeDate)}\n                >\n                    Przygotuj wydruk\n                </Button>\n            </Flex>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    generateReportResult: state.workingHours.pdfReportResult,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    generateReport: (summary: SummaryDay[], profile: Profile, activeDate: ActiveDateParams) =>\n        dispatch(generatePdfReportAction.started({ summary, profile, activeDate })),\n    resetReportStatus: () => dispatch(resetGeneratePdfReportAction()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonthSummaryPage)\n","import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport { AppState } from \"../../../../application/store\"\nimport { Profile } from \"../../../application-profile/types/Profile\"\nimport { fetchPublicHolidaysAction, setActiveDateAction } from \"../../store/Actions\"\nimport FullPageLoader from \"../../../../application/components/common/FullPageLoader\"\nimport AbsencesPage from \"./AbsencesPage\"\nimport { Box } from \"@chakra-ui/layout\"\nimport UnexpectedErrorMessage from \"../../../../application/components/common/UnexpectedErrorMessage\"\nimport MonthSummaryPage from \"../summary/MonthSummaryPage\"\n\ntype Props = {\n    profile: Profile\n} & ReturnType<typeof mapStateToProps> &\n    ReturnType<typeof mapDispatchToProps>\n\nconst AbsencesContainer: React.FC<Props> = ({\n    profile,\n    activeDate,\n    setActiveDate,\n    fetchPublicHolidays,\n    publicHolidaysResult,\n    monthSummaryResult,\n}) => {\n    useEffect(() => {\n        if (!activeDate) {\n            setActiveDate(new Date())\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if (activeDate) {\n            fetchPublicHolidays(activeDate.month, activeDate.year)\n        }\n    }, [fetchPublicHolidays, activeDate])\n\n    if (monthSummaryResult.status === \"FINISHED\" && activeDate) {\n        return <MonthSummaryPage summary={monthSummaryResult.data} activeDate={activeDate} profile={profile} />\n    }\n    if (publicHolidaysResult.status === \"FINISHED\") {\n        return (\n            <AbsencesPage\n                publicHolidays={publicHolidaysResult.data}\n                profile={profile}\n                activeDate={publicHolidaysResult.params}\n            />\n        )\n    } else if (publicHolidaysResult.status === \"FAILED\") {\n        return (\n            <Box>\n                <UnexpectedErrorMessage error={publicHolidaysResult.error} alertProps={{ marginBottom: \"0.5rem\" }} />\n                <AbsencesPage publicHolidays={null} profile={profile} activeDate={publicHolidaysResult.params} />\n            </Box>\n        )\n    }\n    return <FullPageLoader text=\"Wczytywanie nieobecności\" />\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    activeDate: state.workingHours.activeDate,\n    publicHolidaysResult: state.workingHours.publicHolidays,\n    monthSummaryResult: state.workingHours.monthSummary,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    setActiveDate: (date: Date) =>\n        dispatch(setActiveDateAction({ month: date.getMonth() + 1, year: date.getFullYear() })),\n    fetchPublicHolidays: (month: number, year: number) => dispatch(fetchPublicHolidaysAction.started({ month, year })),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AbsencesContainer)\n","import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport UnexpectedErrorMessage from \"../../../application/components/common/UnexpectedErrorMessage\"\nimport { AppState } from \"../../../application/store\"\nimport { getProfilesAction } from \"../store/Actions\"\nimport NewProfileModal from \"./NewProfileModal\"\nimport AbsencesContainer from \"../../working-time/components/absences/AbsencesContainer\"\nimport FullPageLoader from \"../../../application/components/common/FullPageLoader\"\n\ntype Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nconst ProfilesContainer: React.FC<Props> = ({ profilesResult, getAvailableProfiles }) => {\n    useEffect(() => {\n        if (profilesResult.status === \"NOT_STARTED\" || profilesResult.status === \"FAILED\") {\n            getAvailableProfiles()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    if (profilesResult.status === \"FINISHED\" && Object.keys(profilesResult.data).length < 1) {\n        return <NewProfileModal isOpen={true} onClose={() => undefined} canClose={false} />\n    } else if (profilesResult.status === \"FINISHED\") {\n        const selectedProfile = Object.values(profilesResult.data)[0] //TODO: it should be possible to select profile\n        return <AbsencesContainer profile={selectedProfile} />\n    } else if (profilesResult.status === \"FAILED\") {\n        return <UnexpectedErrorMessage error={profilesResult.error} />\n    } else {\n        return <FullPageLoader text=\"Wczytywanie profilu\" />\n    }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    profilesResult: state.profile.availableProfiles,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    getAvailableProfiles: () => dispatch(getProfilesAction.started()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilesContainer)\n","import { ChakraProvider } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { Provider } from \"react-redux\"\nimport DefaultLayout from \"./application/components/layout/DefaultLayout\"\nimport applicationStore from \"./application/store\"\nimport { theme } from \"./application/theme\"\nimport ProfilesContainer from \"./domain/application-profile/components/ProfilesContainer\"\n\nfunction App(): JSX.Element {\n    return (\n        <Provider store={applicationStore}>\n            <ChakraProvider theme={theme}>\n                <DefaultLayout>\n                    <ProfilesContainer />\n                </DefaultLayout>\n            </ChakraProvider>\n        </Provider>\n    )\n}\n\nexport default App\n","import { ReportHandler } from \"web-vitals\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}